{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortReversed","setSortReversed","None","sortType","setSortType","reorderedGoods","goods","isReversed","visibleGoods","sort","first","second","Length","length","Alphabet","localeCompare","reverse","getReorderedGoods","orderChanged","className","type","cn","onClick","current","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAhCD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUI,EACZ,EADYA,WAENC,EAAY,YAAOF,GAqBzB,OAnBIH,GACFK,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKP,EAASgB,OACZ,OAAOF,EAAMG,OAASF,EAAOE,OAE/B,KAAKjB,EAASkB,SACZ,OAAOJ,EAAMK,cAAcJ,GAE7B,QACE,OAAO,MAKXJ,GACFC,EAAaQ,UAGRR,EAOgBS,CACrBpB,EAAiB,CAAEM,WAAUI,WAAYP,IAGrCkB,EAAelB,GAAgBG,IAAaP,EAASM,KAO3D,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYlB,IAAaP,EAASkB,WAEpCQ,QAAS,kBAAMlB,EAAYR,EAASkB,WALtC,iCAUA,wBACEM,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYlB,IAAaP,EAASgB,SAEpCU,QAAS,kBAAMlB,EAAYR,EAASgB,SALtC,4BAUA,wBACEQ,KAAK,SACLD,UAAWE,IACT,qBACCrB,GAAgB,YAEnBsB,QAAS,kBAAMrB,GAAgB,SAAAsB,GAAO,OAAKA,MAN7C,qBAWCL,GACC,wBACEE,KAAK,SACLD,UAAU,mBACVG,QA3CO,WACfrB,GAAgB,GAChBG,EAAYR,EAASM,OAsCf,sBAUJ,6BACE,6BACGG,EAAemB,KAAI,SAAAC,GAAI,OACtB,oBACE,UAAQ,OADV,SAIGA,GAFIA,cCvHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0c742ad0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  None,\n  Alphabet,\n  Length,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType) {\n    visibleGoods.sort((first, second) => {\n      switch (sortType) {\n        case SortType.Length:\n          return first.length - second.length;\n\n        case SortType.Alphabet:\n          return first.localeCompare(second);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortReversed, setSortReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.None);\n\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer, { sortType, isReversed: sortReversed },\n  );\n\n  const orderChanged = sortReversed || sortType !== SortType.None;\n\n  const setReset = () => {\n    setSortReversed(false);\n    setSortType(SortType.None);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortType !== SortType.Alphabet,\n          })}\n          onClick={() => setSortType(SortType.Alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortType !== SortType.Length,\n          })}\n          onClick={() => setSortType(SortType.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            !sortReversed && 'is-light',\n          )}\n          onClick={() => setSortReversed(current => !current)}\n        >\n          Reverse\n        </button>\n\n        {orderChanged && (\n          <button\n            type=\"button\"\n            className=\"button is-danger\"\n            onClick={setReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {reorderedGoods.map(item => (\n            <li\n              data-cy=\"Good\"\n              key={item}\n            >\n              {item}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}